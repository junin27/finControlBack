name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: Build & Test with Maven
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3 # Alterado para v3 ou v4 se preferir

      - name: Set up JDK 17
        uses: actions/setup-java@v3 # Alterado para v3 ou v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Build package
        run: mvn clean package -B -DskipTests # Adicionado -DskipTests se os testes rodam no passo seguinte
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}

      - name: Run tests
        run: mvn test -B # Se o 'package' já roda testes, este pode ser redundante ou focar em outro tipo
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}

  deploy_render: # Mantendo seu deploy do Render
    name: Trigger Render Deploy
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3 # Necessário se o hook precisar de algo do repo, senão pode ser omitido

      - name: Trigger Render Deploy Hook
        run: |
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"

  deploy_koyeb:
        name: Trigger Koyeb Deploy
        needs: build-and-test
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'

        steps:
          - name: Install Koyeb CLI and Verify Installation
            run: |
              echo "Iniciando instalação da CLI do Koyeb..."
              curl -sfL https://raw.githubusercontent.com/koyeb/koyeb-cli/main/install.sh | sh
              echo "CLI do Koyeb instalada."
              
              echo "Adicionando /home/runner/.koyeb/bin ao GITHUB_PATH..."
              echo "/home/runner/.koyeb/bin" >> $GITHUB_PATH
              echo "Conteúdo atual do GITHUB_PATH: $GITHUB_PATH"
              
              echo "Verificando se o diretório .koyeb/bin existe e seu conteúdo:"
              ls -la /home/runner/.koyeb/bin
              
              echo "Verificando qual 'koyeb' está no PATH (após a adição ao GITHUB_PATH):"
              which koyeb || echo "Comando 'koyeb' não encontrado no PATH padrão após adição ao GITHUB_PATH."
              
              echo "Tentando executar 'koyeb version' com caminho completo:"
              /home/runner/.koyeb/bin/koyeb version || echo "Falha ao executar koyeb com caminho completo."

          - name: Trigger Koyeb Redeploy
            env:
              KOYEB_TOKEN: ${{ secrets.KOYEB_API_TOKEN }}
            run: |
              echo "Verificando PATH atual antes de rodar os comandos Koyeb:"
              echo $PATH
              
              echo "Tentando executar 'koyeb version' (deve usar o GITHUB_PATH se configurado corretamente):"
              koyeb version # Este deve funcionar se GITHUB_PATH foi efetivo para este step
              
              echo "Fazendo login no Koyeb..."
              # Usar o caminho completo para garantir, ou confiar no GITHUB_PATH se o 'koyeb version' acima funcionou
              /home/runner/.koyeb/bin/koyeb login --token $KOYEB_TOKEN
              
              echo "Acionando redeploy..."
              # Substitua <SEU_APP_KOYEB>/<SEU_SERVICO_KOYEB> pelos nomes corretos
              /home/runner/.koyeb/bin/koyeb services redeploy seu-app-koyeb/seu-servico-koyeb
              echo "Koyeb redeploy triggered."
